using Il2CppModdingCodegen.Config;
using Il2CppModdingCodegen.CppSerialization;
using System;
using System.IO;

namespace Il2CppModdingCodegen.Serialization
{
    public class CppSourceCreator
    {
        private readonly SerializationConfig _config;
        private readonly CppContextSerializer _serializer;
        private CppStreamWriter? overallStreamWriter;
        private string overallSourceLocation;

        internal CppSourceCreator(SerializationConfig config, CppContextSerializer serializer)
        {
            _config = config;
            _serializer = serializer;
            overallSourceLocation = Path.Combine(_config.OutputDirectory, _config.OutputSourceDirectory, "main.cpp");
            overallStreamWriter = _config.OneSourceFile ? new CppStreamWriter(new StreamWriter(overallSourceLocation), "  ") : null;
        }

        internal void SetupChunkedSerialization(int label)
        {
            if (overallStreamWriter is not null)
            {
                overallStreamWriter.Close();
                overallStreamWriter.Dispose();
            }
            overallSourceLocation = Path.Combine(_config.OutputDirectory, _config.OutputSourceDirectory, $"main_{label}.cpp");
            overallStreamWriter = _config.OneSourceFile ? new CppStreamWriter(new StreamWriter(overallSourceLocation), "  ") : null;
        }

        internal void Serialize(CppTypeContext context)
        {
            var sourceLocation = _config.OneSourceFile ? Path.Combine(_config.OutputDirectory, _config.OutputSourceDirectory, context.CppFileName) : overallSourceLocation;
            CppStreamWriter? writer = overallStreamWriter;
            if (writer is null)
            {
                Directory.CreateDirectory(Path.GetDirectoryName(sourceLocation));
                using var ms = new MemoryStream();
                using var rawWriter = new StreamWriter(ms);
                writer = new CppStreamWriter(rawWriter, "  ");
            }
            // Write header
            writer.WriteComment($"Autogenerated from {nameof(CppSourceCreator)}");
            writer.WriteComment($"Created by Sc2ad");
            writer.WriteComment("=========================================================================");
            try
            {
                // Write SerializerContext and actual type
                _serializer.Serialize(writer, context, false);
            }
            catch (UnresolvedTypeException e)
            {
                if (_config.UnresolvedTypeExceptionHandling?.TypeHandling == UnresolvedTypeExceptionHandling.DisplayInFile)
                {
                    writer.WriteLine("// Unresolved type exception!");
                    writer.WriteLine("/*");
                    writer.WriteLine(e);
                    writer.WriteLine("*/");
                }
                else if (_config.UnresolvedTypeExceptionHandling?.TypeHandling == UnresolvedTypeExceptionHandling.SkipIssue)
                    return;
                else if (_config.UnresolvedTypeExceptionHandling?.TypeHandling == UnresolvedTypeExceptionHandling.Elevate)
                    throw new InvalidOperationException($"Cannot elevate {e} to a parent type- there is no parent type!");
            }
            writer.Flush();

            if (overallStreamWriter is null)
            {
                writer.WriteIfDifferent(sourceLocation, context);
                writer.Close();
                writer.Dispose();
            }
        }

        internal void Close()
        {
            if (overallStreamWriter is not null)
                overallStreamWriter.Close();
        }
    }
}